// App.tsx
import Constants from 'expo-constants';
import { Slot } from 'expo-router';
import { getApps, initializeApp } from 'firebase/app';
import React from 'react';
import { AuthProvider } from './src/contexts/AuthContext';

// Load Firebase config from app constants or environment
const firebaseConfig = {
  apiKey: Constants.expoConfig?.extra?.FIREBASE_API_KEY,
  authDomain: Constants.expoConfig?.extra?.FIREBASE_AUTH_DOMAIN,
  projectId: Constants.expoConfig?.extra?.FIREBASE_PROJECT_ID,
  storageBucket: Constants.expoConfig?.extra?.FIREBASE_STORAGE_BUCKET,
  messagingSenderId: Constants.expoConfig?.extra?.FIREBASE_MESSAGING_SENDER_ID,
  appId: Constants.expoConfig?.extra?.FIREBASE_APP_ID,
};

// Initialize Firebase only once
if (!getApps().length) {
  initializeApp(firebaseConfig);
}

/**
 * Root component that initializes Firebase and wraps all routes
 * with authentication context, rendering the current route via Slot.
 */
export default function App() {
  return (
    <AuthProvider>
      <Slot />
    </AuthProvider>
  );
}